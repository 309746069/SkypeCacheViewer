// third_party/blink/public/mojom/indexeddb/indexeddb.mojom-shared-message-ids.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_INDEXEDDB_INDEXEDDB_MOJOM_SHARED_MESSAGE_IDS_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_INDEXEDDB_INDEXEDDB_MOJOM_SHARED_MESSAGE_IDS_H_

#include <stdint.h>
namespace blink {
namespace mojom {

namespace internal {


// The 1101984897 value is based on sha256(salt + "IDBCallbacks1").
constexpr uint32_t kIDBCallbacks_Error_Name = 1101984897;
// The 211055323 value is based on sha256(salt + "IDBCallbacks2").
constexpr uint32_t kIDBCallbacks_SuccessNamesAndVersionsList_Name = 211055323;
// The 737296433 value is based on sha256(salt + "IDBCallbacks3").
constexpr uint32_t kIDBCallbacks_SuccessStringList_Name = 737296433;
// The 2124219756 value is based on sha256(salt + "IDBCallbacks4").
constexpr uint32_t kIDBCallbacks_Blocked_Name = 2124219756;
// The 73438692 value is based on sha256(salt + "IDBCallbacks5").
constexpr uint32_t kIDBCallbacks_UpgradeNeeded_Name = 73438692;
// The 240428342 value is based on sha256(salt + "IDBCallbacks6").
constexpr uint32_t kIDBCallbacks_SuccessDatabase_Name = 240428342;
// The 1767717862 value is based on sha256(salt + "IDBCallbacks7").
constexpr uint32_t kIDBCallbacks_SuccessInteger_Name = 1767717862;
// The 1775882623 value is based on sha256(salt + "IDBCallbacks8").
constexpr uint32_t kIDBCallbacks_Success_Name = 1775882623;
// The 69634868 value is based on sha256(salt + "IDBDatabaseCallbacks1").
constexpr uint32_t kIDBDatabaseCallbacks_ForcedClose_Name = 69634868;
// The 789742849 value is based on sha256(salt + "IDBDatabaseCallbacks2").
constexpr uint32_t kIDBDatabaseCallbacks_VersionChange_Name = 789742849;
// The 209779750 value is based on sha256(salt + "IDBDatabaseCallbacks3").
constexpr uint32_t kIDBDatabaseCallbacks_Abort_Name = 209779750;
// The 648887319 value is based on sha256(salt + "IDBDatabaseCallbacks4").
constexpr uint32_t kIDBDatabaseCallbacks_Complete_Name = 648887319;
// The 1756126162 value is based on sha256(salt + "IDBDatabaseCallbacks5").
constexpr uint32_t kIDBDatabaseCallbacks_Changes_Name = 1756126162;
// The 88301099 value is based on sha256(salt + "IDBCursor1").
constexpr uint32_t kIDBCursor_Advance_Name = 88301099;
// The 2025991585 value is based on sha256(salt + "IDBCursor2").
constexpr uint32_t kIDBCursor_CursorContinue_Name = 2025991585;
// The 1785717598 value is based on sha256(salt + "IDBCursor3").
constexpr uint32_t kIDBCursor_Prefetch_Name = 1785717598;
// The 630531627 value is based on sha256(salt + "IDBCursor4").
constexpr uint32_t kIDBCursor_PrefetchReset_Name = 630531627;
// The 1858765612 value is based on sha256(salt + "IDBTransaction1").
constexpr uint32_t kIDBTransaction_CreateObjectStore_Name = 1858765612;
// The 1019373550 value is based on sha256(salt + "IDBTransaction2").
constexpr uint32_t kIDBTransaction_DeleteObjectStore_Name = 1019373550;
// The 1027434755 value is based on sha256(salt + "IDBTransaction3").
constexpr uint32_t kIDBTransaction_Put_Name = 1027434755;
// The 942914528 value is based on sha256(salt + "IDBTransaction4").
constexpr uint32_t kIDBTransaction_Commit_Name = 942914528;
// The 696585254 value is based on sha256(salt + "IDBDatabase1").
constexpr uint32_t kIDBDatabase_RenameObjectStore_Name = 696585254;
// The 38331955 value is based on sha256(salt + "IDBDatabase2").
constexpr uint32_t kIDBDatabase_CreateTransaction_Name = 38331955;
// The 177888612 value is based on sha256(salt + "IDBDatabase3").
constexpr uint32_t kIDBDatabase_Close_Name = 177888612;
// The 248719831 value is based on sha256(salt + "IDBDatabase4").
constexpr uint32_t kIDBDatabase_VersionChangeIgnored_Name = 248719831;
// The 810884010 value is based on sha256(salt + "IDBDatabase5").
constexpr uint32_t kIDBDatabase_AddObserver_Name = 810884010;
// The 1991661772 value is based on sha256(salt + "IDBDatabase6").
constexpr uint32_t kIDBDatabase_RemoveObservers_Name = 1991661772;
// The 2044727620 value is based on sha256(salt + "IDBDatabase7").
constexpr uint32_t kIDBDatabase_Get_Name = 2044727620;
// The 268576395 value is based on sha256(salt + "IDBDatabase8").
constexpr uint32_t kIDBDatabase_GetAll_Name = 268576395;
// The 678531758 value is based on sha256(salt + "IDBDatabase9").
constexpr uint32_t kIDBDatabase_SetIndexKeys_Name = 678531758;
// The 1168800629 value is based on sha256(salt + "IDBDatabase10").
constexpr uint32_t kIDBDatabase_SetIndexesReady_Name = 1168800629;
// The 19704223 value is based on sha256(salt + "IDBDatabase11").
constexpr uint32_t kIDBDatabase_OpenCursor_Name = 19704223;
// The 24418953 value is based on sha256(salt + "IDBDatabase12").
constexpr uint32_t kIDBDatabase_Count_Name = 24418953;
// The 997476451 value is based on sha256(salt + "IDBDatabase13").
constexpr uint32_t kIDBDatabase_DeleteRange_Name = 997476451;
// The 12935039 value is based on sha256(salt + "IDBDatabase14").
constexpr uint32_t kIDBDatabase_GetKeyGeneratorCurrentNumber_Name = 12935039;
// The 720285116 value is based on sha256(salt + "IDBDatabase15").
constexpr uint32_t kIDBDatabase_Clear_Name = 720285116;
// The 140977681 value is based on sha256(salt + "IDBDatabase16").
constexpr uint32_t kIDBDatabase_CreateIndex_Name = 140977681;
// The 2000042561 value is based on sha256(salt + "IDBDatabase17").
constexpr uint32_t kIDBDatabase_DeleteIndex_Name = 2000042561;
// The 291197775 value is based on sha256(salt + "IDBDatabase18").
constexpr uint32_t kIDBDatabase_RenameIndex_Name = 291197775;
// The 1784412596 value is based on sha256(salt + "IDBDatabase19").
constexpr uint32_t kIDBDatabase_Abort_Name = 1784412596;
// The 359183774 value is based on sha256(salt + "IDBFactory1").
constexpr uint32_t kIDBFactory_GetDatabaseInfo_Name = 359183774;
// The 1409126944 value is based on sha256(salt + "IDBFactory2").
constexpr uint32_t kIDBFactory_GetDatabaseNames_Name = 1409126944;
// The 1585332092 value is based on sha256(salt + "IDBFactory3").
constexpr uint32_t kIDBFactory_Open_Name = 1585332092;
// The 292055098 value is based on sha256(salt + "IDBFactory4").
constexpr uint32_t kIDBFactory_DeleteDatabase_Name = 292055098;
// The 735557785 value is based on sha256(salt + "IDBFactory5").
constexpr uint32_t kIDBFactory_AbortTransactionsAndCompactDatabase_Name = 735557785;
// The 822738757 value is based on sha256(salt + "IDBFactory6").
constexpr uint32_t kIDBFactory_AbortTransactionsForDatabase_Name = 822738757;

}  // namespace internal
}  // namespace mojom
}  // namespace blink

#endif  // THIRD_PARTY_BLINK_PUBLIC_MOJOM_INDEXEDDB_INDEXEDDB_MOJOM_SHARED_MESSAGE_IDS_H_